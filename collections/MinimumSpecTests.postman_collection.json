{
	"info": {
		"_postman_id": "670b930d-a065-4608-9252-efb688417b6e",
		"name": "MinimumSpec Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25498232"
	},
	"item": [
		{
			"name": "Add a MinimumSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"minimumSpecId\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"os\": \"Windows or Linux\",\r\n    \"processor\": \"Intel Core i5 10400\",\r\n    \"ramGb\": 12,\r\n    \"videoCard\": \"NVIDIA GTX 1650 Super\",\r\n    \"storageGb\": 30\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/minimumSpecs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"minimumSpecs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all MinimumSpecs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of minimumSpecs > ' + 0, function () {\r",
							"    var data = pm.response.json()\r",
							"    pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/minimumSpecs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"minimumSpecs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one MinimumSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/minimumSpecs/{{minimumSpecId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"minimumSpecs",
						"{{minimumSpecId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one invalid MinimumSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The minimum spec with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/minimumSpecs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"minimumSpecs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a MinimumSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"os\": \"Windows or Linux\",\r\n    \"processor\": \"Intel Core i7 15400\",\r\n    \"ramGb\": 12,\r\n    \"videoCard\": \"NVIDIA GTX 1650 Super\",\r\n    \"storageGb\": 30\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/minimumSpecs/{{minimumSpecId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"minimumSpecs",
						"{{minimumSpecId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an invalid MinimumSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The minimum spec with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"os\": \"Windows or Linux\",\r\n    \"processor\": \"Intel Core i7 15400\",\r\n    \"ramGb\": 12,\r\n    \"videoCard\": \"NVIDIA GTX 1650 Super\",\r\n    \"storageGb\": 30\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/minimumSpecs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"minimumSpecs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a MinimumSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/minimumSpecs/{{minimumSpecId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"minimumSpecs",
						"{{minimumSpecId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an invalid MinimumSpec",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The minimum spec with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/minimumSpecs/{{minimumSpecId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"minimumSpecs",
						"{{minimumSpecId}}"
					]
				}
			},
			"response": []
		}
	]
}